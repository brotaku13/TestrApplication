def tripleStep(num):
	if num < 0:
		return 0
	if num == 0:
		return 1
	if num == 1:
		return 1
	return tripleStep(num - 1) + tripleStep(num - 2) + tripleStep(num - 3)


def Method2(num):
	memo = [-1] * (num + 1)
	return TripleHopRecursive(num, memo)


def TripleHopRecursive(num, memo):
	if num < 0:
	 return 0
	memo[0] = 1
	if x >= 1:
	 memo[1] = 1
	if num >= 2:
	 memo[2] = memo[1] + memo[0]
	if num > 2:
		for i in range(3, num + 1):
			memo[i] = memo[i - 1] + memo[i - 2] + memo[i - 3]
	return memo[num]